{"version":3,"sources":["utils/pokemon.js","components/NameButton.js","components/PokemonList.js","components/TypeList.js","components/ModalCard.js","assets/bg.jpg","Pages/index.js","assets/logo.png","components/Nav.js","App.js","index.js"],"names":["displayName","rawName","split","map","str","toUpperCase","substring","join","getPokemon","id","setData","setError","a","fetch","res","json","name","weight","stats","types","sprites","sprite","other","front_default","base_stat","stat","value","type","pokemonPager","offset","limit","setPages","count","results","Math","ceil","NameButton","handleOpen","Button","onClick","Box","sx","p","backgroundColor","color","useStyles","makeStyles","root","display","flexWrap","alignItems","justifyContent","gap","PokemonList","children","className","classes","clsx","Pill","style","padding","borderRadius","TypeList","index","content","flexDirection","img","width","position","top","left","transform","bgcolor","boxShadow","ModalCard","open","handleClose","useState","pokemon","setPokemon","error","useEffect","Modal","onClose","Typography","variant","gutterBottom","component","src","alt","backgroundImage","backgroundRepeat","backgroundSize","minHeight","list","marginTop","Pokemons","page","setPage","maxPage","setMaxPage","pokemons","setPokemons","activePokemon","setActivePokemon","React","setOpen","Pagination","footer","m","showFirstButton","showLastButton","onChange","_","Nav","AppBar","Toolbar","logo","maxWidth","margin","App","exact","path","render","props","to","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7961cb1c.chunk.js","sourcesContent":["const displayName = (rawName) =>\n  rawName\n    .split(\"-\")\n    .map((str) => str[0].toUpperCase() + str.substring(1))\n    .join(\" \");\n\nconst getPokemon = async (id, setData, setError) => {\n  try {\n    const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);\n    let { name, weight, stats, types, sprites } = await res.json();\n\n    let sprite = sprites.other[\"official-artwork\"].front_default;\n    stats = stats.map(({ base_stat, stat }) => {\n      return {\n        name: displayName(stat.name),\n        value: base_stat,\n      };\n    });\n    types = types.map(({ type }) => type.name);\n    setData({ name: displayName(name), sprite, types, weight, stats });\n    setError(false);\n  } catch (e) {\n    setError(true);\n  }\n};\n\nconst pokemonPager = async (offset, limit, setData, setPages) => {\n  try {\n    const res = await fetch(\n      `https://pokeapi.co/api/v2/pokemon/?offset=${offset}&limit=${limit}`\n    );\n    let { count, results } = await res.json();\n\n    setPages(Math.ceil(count / limit));\n    setData(results);\n  } catch (e) {}\n};\n\nexport { getPokemon, pokemonPager, displayName };\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport { displayName } from \"../utils/pokemon\";\n\nexport default function NameButton({ name, handleOpen }) {\n  return (\n    <Button onClick={handleOpen}>\n      <Box\n        sx={{\n          p: 3,\n          backgroundColor: \"black\",\n          color: \"white\",\n        }}\n      >\n        {displayName(name).toUpperCase()}\n      </Box>\n    </Button>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    gap: 24,\n  },\n});\n\nconst PokemonList = ({ children, className }) => {\n  const classes = useStyles();\n  return <div className={clsx(classes.root, className)}>{children}</div>;\n};\n\nexport default PokemonList;\n","import React from \"react\";\n\nlet Pill = ({ name }) => (\n  <span\n    style={{\n      padding: 12,\n      borderRadius: 24,\n      backgroundColor: \"orange\",\n    }}\n  >\n    {name}\n  </span>\n);\n\nconst TypeList = ({ types }) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        gap: 12,\n      }}\n    >\n      {types.map((type, index) => (\n        <Pill key={index} name={type} />\n      ))}\n    </div>\n  );\n};\nexport default TypeList;\n","import React, { useState, useEffect } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport TypeList from \"../components/TypeList\";\nimport { getPokemon } from \"../utils/pokemon\";\nimport Typography from \"@mui/material/Typography\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles({\n  content: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    gap: 12,\n  },\n  img: {\n    width: \"40%\",\n  },\n});\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst ModalCard = ({ id, open, handleClose }) => {\n  let [pokemon, setPokemon] = useState(null);\n  let [error, setError] = useState(false);\n\n  useEffect(() => {\n    getPokemon(id, setPokemon, setError);\n  }, [id]);\n\n  const classes = useStyles();\n\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n      sx={{ backgroundColor: \"rgba(0,0,0,0.85)\" }}\n    >\n      <Box sx={style}>\n        {!error && pokemon ? (\n          <div className={classes.content}>\n            <Typography variant=\"h5\" gutterBottom component=\"div\">\n              {pokemon.name.toUpperCase()}\n            </Typography>\n            <img src={pokemon.sprite} className={classes.img} alt=\"sprite\" />\n            <TypeList types={pokemon.types} />\n            {[{ name: \"Weight\", value: pokemon.weight }, ...pokemon.stats].map(\n              ({ name, value }, index) => {\n                return (\n                  <Typography\n                    key={index}\n                    variant=\"h5\"\n                    gutterBottom\n                    component=\"div\"\n                  >\n                    {name}: {value}\n                  </Typography>\n                );\n              }\n            )}\n          </div>\n        ) : (\n          <div>Not available</div>\n        )}\n      </Box>\n    </Modal>\n  );\n};\n\nexport default ModalCard;\n","export default __webpack_public_path__ + \"static/media/bg.6804a20b.jpg\";","import React, { useState, useEffect } from \"react\";\nimport Pagination from \"@mui/material/Pagination\";\nimport { pokemonPager } from \"../utils/pokemon\";\nimport NameButton from \"../components/NameButton\";\nimport PokemonList from \"../components/PokemonList\";\nimport ModalCard from \"../components/ModalCard\";\nimport { makeStyles } from \"@mui/styles\";\n\nimport backgroundImage from \"../assets/bg.jpg\";\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundImage: `url(${backgroundImage})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"100% 100%\",\n    minHeight: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n  },\n  list: {\n    marginTop: 100,\n  },\n});\n\nconst Pokemons = () => {\n  const [page, setPage] = useState(1);\n  const [maxPage, setMaxPage] = useState(0);\n  const [pokemons, setPokemons] = useState([]);\n  const [activePokemon, setActivePokemon] = useState(\"\");\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = (name) => {\n    setActivePokemon(name);\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setActivePokemon(\"\");\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n\n  const changePage = (_, value) => {\n    setPage(value);\n  };\n\n  useEffect(() => {\n    pokemonPager(25 * (page - 1), 25, setPokemons, setMaxPage);\n  }, [page]);\n\n  return (\n    <div className={classes.root}>\n      {maxPage > 0 ? (\n        <>\n          <PokemonList className={classes.list}>\n            {pokemons.map(({ name }) => (\n              <NameButton\n                name={name}\n                key={name}\n                handleOpen={() => handleOpen(name)}\n              />\n            ))}\n          </PokemonList>\n\n          <Pagination\n            className={classes.footer}\n            sx={{\n              p: 2,\n              m: 3,\n              bgcolor: \"white\",\n            }}\n            variant=\"outlined\"\n            count={maxPage}\n            showFirstButton\n            showLastButton\n            page={page}\n            onChange={changePage}\n          />\n        </>\n      ) : (\n        <div>There are no Pokemons</div>\n      )}\n      {activePokemon && (\n        <ModalCard handleClose={handleClose} id={activePokemon} open={open} />\n      )}\n    </div>\n  );\n};\n\nexport default Pokemons;\n","export default __webpack_public_path__ + \"static/media/logo.9631a0e0.png\";","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\n\nimport logo from \"../assets/logo.png\";\n\nexport default function Nav() {\n  return (\n    <AppBar position=\"fixed\" style={{ backgroundColor: \"black\" }} sx={{ p: 2 }}>\n      <Toolbar>\n        <img\n          src={logo}\n          style={{\n            maxWidth: 160,\n            margin: \"auto\",\n          }}\n          alt=\"logo\"\n        />\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport HomePage from \"./Pages\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <div>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\" render={(props) => <HomePage {...props} />} />\n        <Route render={() => <Redirect to=\"/\" />} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}