{"version":3,"sources":["utils/pokemon.js","components/NameLink.js","components/PokemonList.js","assets/bg.jpg","Pages/index.js","Pages/Pokemon.js","assets/logo.png","components/Nav.js","App.js","index.js"],"names":["getPokemon","id","setData","setError","a","fetch","res","json","name","weight","stats","types","pokemonPager","offset","limit","setPages","count","results","Math","ceil","NameLink","Link","href","Box","sx","p","backgroundColor","useStyles","makeStyles","root","display","flexWrap","alignItems","justifyContent","gap","PokemonList","children","className","classes","clsx","theme","backgroundImage","backgroundRepeat","backgroundSize","minHeight","flexDirection","list","marginTop","Pokemons","useState","page","setPage","maxPage","setMaxPage","pokemons","setPokemons","useEffect","map","index","Pagination","footer","m","bgcolor","variant","showFirstButton","showLastButton","onChange","event","value","Pokemon","match","params","pokemon","setPokemon","error","JSON","stringify","logo","maxWidth","margin","Nav","AppBar","position","style","Toolbar","src","alt","App","exact","path","render","props","to","ReactDOM","document","getElementById"],"mappings":"wPAAMA,EAAU,uCAAG,WAAOC,EAAIC,EAASC,GAApB,yBAAAC,EAAA,+EAEGC,MAAM,qCAAD,OAAsCJ,IAF9C,cAETK,EAFS,gBAG4BA,EAAIC,OAHhC,gBAGTC,EAHS,EAGTA,KAAMC,EAHG,EAGHA,OAAQC,EAHL,EAGKA,MAAOC,EAHZ,EAGYA,MAE3BT,EAAQ,CAAEM,OAAMC,SAAQC,QAAOC,UAC/BR,GAAS,GANM,kDAQfA,GAAS,GARM,0DAAH,0DAYVS,EAAY,uCAAG,WAAOC,EAAQC,EAAOZ,EAASa,GAA/B,qBAAAX,EAAA,+EAECC,MAAM,6CAAD,OACwBQ,EADxB,kBACwCC,IAH9C,cAEXR,EAFW,gBAKcA,EAAIC,OALlB,gBAKXS,EALW,EAKXA,MAAOC,EALI,EAKJA,QAEbF,EAASG,KAAKC,KAAKH,EAAQF,IAC3BZ,EAAQe,GARS,4GAAH,4D,yBCRH,SAASG,EAAT,GAA6B,IAATZ,EAAQ,EAARA,KACjC,OACE,cAACa,EAAA,EAAD,CAAMC,KAAI,4CAAuCd,GAAjD,SACE,cAACe,EAAA,EAAD,CACEC,GAAI,CACFC,EAAG,EACHC,gBAAiB,SAHrB,SAMGlB,M,oBCTHmB,EAAYC,YAAW,CAC3BC,KAAM,CACJC,QAAS,OACTC,SAAU,OACVC,WAAY,SACZC,eAAgB,SAChBC,IAAK,MAUMC,EANK,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UACzBC,EAAUX,IAEhB,OAAO,qBAAKU,UAAWE,YAAKD,EAAQT,KAAMQ,GAAnC,SAAgDD,KCjB1C,MAA0B,+BCSnCT,EAAYC,aAAW,SAACY,GAAD,MAAY,CACvCX,KAAM,CACJY,gBAAgB,OAAD,OAASA,EAAT,KACfC,iBAAkB,YAClBC,eAAgB,YAChBC,UAAW,QACXd,QAAS,OACTe,cAAe,SACfZ,eAAgB,eAChBD,WAAY,UAEdc,KAAM,CACJC,UAAW,SAsDAC,EAlDE,WACf,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMjB,EAAUX,IAUhB,OAJA6B,qBAAU,WACR5C,EAAa,IAAMsC,EAAO,GAAI,GAAIK,EAAaF,KAC9C,CAACH,IAGF,qBAAKb,UAAWC,EAAQT,KAAxB,SAGGuB,EAAU,EACT,qCACE,cAAC,EAAD,CAAaf,UAAWC,EAAQQ,KAAhC,SACGQ,EAASG,KAAI,WAAWC,GAAX,IAAGlD,EAAH,EAAGA,KAAH,OACZ,cAACY,EAAD,CAAUZ,KAAMA,GAAWkD,QAK/B,cAACC,EAAA,EAAD,CACEtB,UAAWC,EAAQsB,OACnBpC,GAAI,CACFC,EAAG,EACHoC,EAAG,EACHC,QAAS,SAEXC,QAAQ,WACR/C,MAAOoC,EACPY,iBAAe,EACfC,gBAAc,EACdf,KAAMA,EACNgB,SAjCS,SAACC,EAAOC,GACzBjB,EAAQiB,SAoCJ,2DC9COC,EApBC,SAAC,GAAe,IACtBpE,EADqB,EAAZqE,MACIC,OAAbtE,GACR,EAA4BgD,mBAAS,MAArC,mBAAKuB,EAAL,KAAcC,EAAd,KACA,EAAwBxB,oBAAS,GAAjC,mBAAKyB,EAAL,KAAYvE,EAAZ,KAMA,OAJAqD,qBAAU,WACRxD,EAAWC,EAAIwE,EAAYtE,KAC1B,CAACF,IAGF,8BACIyE,EAGA,wCAFA,8BAAMC,KAAKC,UAAUJ,EAAS,KAAM,Q,kBCf7B,MAA0B,iCCOnC7C,EAAYC,YAAW,CAC3BiD,KAAM,CACJC,SAAU,IACVC,OAAQ,UAIG,SAASC,IACtB,IAAM1C,EAAUX,IAEhB,OACE,cAACsD,EAAA,EAAD,CAAQC,SAAS,QAAQC,MAAO,CAAEzD,gBAAiB,SAAWF,GAAI,CAAEC,EAAG,GAAvE,SACE,cAAC2D,EAAA,EAAD,UACE,qBAAKC,IAAKR,EAAMxC,UAAWC,EAAQuC,KAAMS,IAAI,aCGtCC,MAjBf,WACE,OACE,gCACE,cAACP,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAACC,GAAD,OAAW,cAAC,EAAD,eAAcA,OACvD,cAAC,IAAD,CACEH,OAAK,EACLC,KAAK,OACLC,OAAQ,SAACC,GAAD,OAAW,cAAC,EAAD,eAAiBA,OAEtC,cAAC,IAAD,CAAOD,OAAQ,kBAAM,cAAC,IAAD,CAAUE,GAAG,gB,QCX1CC,IAASH,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.b1149a97.chunk.js","sourcesContent":["const getPokemon = async (id, setData, setError) => {\n  try {\n    const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);\n    let { name, weight, stats, types } = await res.json();\n\n    setData({ name, weight, stats, types });\n    setError(false);\n  } catch (e) {\n    setError(true);\n  }\n};\n\nconst pokemonPager = async (offset, limit, setData, setPages) => {\n  try {\n    const res = await fetch(\n      `https://pokeapi.co/api/v2/pokemon/?offset=${offset}&limit=${limit}`\n    );\n    let { count, results } = await res.json();\n\n    setPages(Math.ceil(count / limit));\n    setData(results);\n    //setError(false);\n  } catch (e) {\n    // setError(true);\n  }\n};\n\nexport { getPokemon, pokemonPager };\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Link from \"@mui/material/Link\";\n\nexport default function NameLink({ name }) {\n  return (\n    <Link href={`https://pokeapi.co/api/v2/pokemon/${name}`}>\n      <Box\n        sx={{\n          p: 3,\n          backgroundColor: \"black\",\n        }}\n      >\n        {name}\n      </Box>\n    </Link>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    gap: 24,\n  },\n});\n\nconst PokemonList = ({ children, className }) => {\n  const classes = useStyles();\n\n  return <div className={clsx(classes.root, className)}>{children}</div>;\n};\n\nexport default PokemonList;\n","export default __webpack_public_path__ + \"static/media/bg.6804a20b.jpg\";","import React, { useState, useEffect } from \"react\";\nimport Pagination from \"@mui/material/Pagination\";\nimport { pokemonPager } from \"../utils/pokemon\";\nimport NameLink from \"../components/NameLink\";\nimport PokemonList from \"../components/PokemonList\";\nimport { makeStyles } from \"@mui/styles\";\n\nimport backgroundImage from \"../assets/bg.jpg\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundImage: `url(${backgroundImage})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"100% 100%\",\n    minHeight: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n  },\n  list: {\n    marginTop: 100,\n  },\n}));\n\nconst Pokemons = () => {\n  const [page, setPage] = useState(1);\n  const [maxPage, setMaxPage] = useState(0);\n  const [pokemons, setPokemons] = useState([]);\n\n  const classes = useStyles();\n\n  const changePage = (event, value) => {\n    setPage(value);\n  };\n\n  useEffect(() => {\n    pokemonPager(25 * (page - 1), 25, setPokemons, setMaxPage);\n  }, [page]);\n\n  return (\n    <div className={classes.root}>\n      {/* <Nav /> */}\n\n      {maxPage > 0 ? (\n        <>\n          <PokemonList className={classes.list}>\n            {pokemons.map(({ name }, index) => (\n              <NameLink name={name} key={index} />\n            ))}\n          </PokemonList>\n\n          {/* <pre>{JSON.stringify(pokemons, null, 2)}</pre> */}\n          <Pagination\n            className={classes.footer}\n            sx={{\n              p: 2,\n              m: 3,\n              bgcolor: \"white\",\n            }}\n            variant=\"outlined\"\n            count={maxPage}\n            showFirstButton\n            showLastButton\n            page={page}\n            onChange={changePage}\n          />\n        </>\n      ) : (\n        <div>There are no Pokemons</div>\n      )}\n    </div>\n  );\n};\n\nexport default Pokemons;\n","import React, { useState, useEffect } from \"react\";\nimport { getPokemon } from \"../utils/pokemon\";\n\nconst Pokemon = ({ match }) => {\n  const { id } = match.params;\n  let [pokemon, setPokemon] = useState(null);\n  let [error, setError] = useState(false);\n\n  useEffect(() => {\n    getPokemon(id, setPokemon, setError);\n  }, [id]);\n\n  return (\n    <div>\n      {!error ? (\n        <pre>{JSON.stringify(pokemon, null, 2)}</pre>\n      ) : (\n        <div>Error</div>\n      )}\n    </div>\n  );\n};\n\nexport default Pokemon;\n","export default __webpack_public_path__ + \"static/media/logo.9631a0e0.png\";","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport { makeStyles } from \"@mui/styles\";\n\nimport logo from \"../assets/logo.png\";\n\nconst useStyles = makeStyles({\n  logo: {\n    maxWidth: 160,\n    margin: \"auto\",\n  },\n});\n\nexport default function Nav() {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"fixed\" style={{ backgroundColor: \"black\" }} sx={{ p: 2 }}>\n      <Toolbar>\n        <img src={logo} className={classes.logo} alt=\"logo\" />\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport HomePage from \"./Pages\";\nimport PokemonPage from \"./Pages/Pokemon\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <div>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\" render={(props) => <HomePage {...props} />} />\n        <Route\n          exact\n          path=\"/:id\"\n          render={(props) => <PokemonPage {...props} />}\n        />\n        <Route render={() => <Redirect to=\"/\" />} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}