{"version":3,"sources":["utils/pokemon.js","components/NameLink.js","components/PokemonList.js","components/ModalCard.js","assets/bg.jpg","Pages/index.js","assets/logo.png","components/Nav.js","App.js","index.js"],"names":["getPokemon","id","setData","setError","a","fetch","res","json","name","weight","stats","types","sprites","sprite","other","front_default","map","base_stat","stat","value","type","pokemonPager","offset","limit","setPages","count","results","Math","ceil","NameLink","handleOpen","Button","onClick","Box","sx","p","backgroundColor","useStyles","makeStyles","root","display","flexWrap","alignItems","justifyContent","gap","PokemonList","children","className","classes","clsx","style","position","top","left","transform","width","bgcolor","border","boxShadow","ModalCard","open","handleClose","useState","pokemon","setPokemon","error","useEffect","Modal","onClose","JSON","stringify","theme","backgroundImage","backgroundRepeat","backgroundSize","minHeight","flexDirection","list","marginTop","Pokemons","page","setPage","maxPage","setMaxPage","pokemons","setPokemons","React","setOpen","activePokemon","setActivePokemon","index","Pagination","footer","m","variant","showFirstButton","showLastButton","onChange","event","logo","maxWidth","margin","Nav","AppBar","Toolbar","src","alt","App","exact","path","render","props","to","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0b12b88d.chunk.js","sourcesContent":["const getPokemon = async (id, setData, setError) => {\n  try {\n    const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);\n    let { name, weight, stats, types, sprites } = await res.json();\n\n    let sprite = sprites.other[\"official-artwork\"].front_default;\n    stats = stats.map(({ base_stat, stat }) => {\n      return { name: stat.name, value: base_stat };\n    });\n    types = types.map(({ type }) => type.name);\n    setData({ name, sprite, types, weight, stats });\n    setError(false);\n  } catch (e) {\n    setError(true);\n  }\n};\n\nconst pokemonPager = async (offset, limit, setData, setPages) => {\n  try {\n    const res = await fetch(\n      `https://pokeapi.co/api/v2/pokemon/?offset=${offset}&limit=${limit}`\n    );\n    let { count, results } = await res.json();\n\n    setPages(Math.ceil(count / limit));\n    setData(results);\n  } catch (e) {}\n};\n\nexport { getPokemon, pokemonPager };\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\n\nexport default function NameLink({ name, handleOpen }) {\n  return (\n    <Button onClick={handleOpen}>\n      <Box\n        sx={{\n          p: 3,\n          backgroundColor: \"black\",\n        }}\n      >\n        {name}\n      </Box>\n    </Button>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    gap: 24,\n  },\n});\n\nconst PokemonList = ({ children, className }) => {\n  const classes = useStyles();\n\n  return <div className={clsx(classes.root, className)}>{children}</div>;\n};\n\nexport default PokemonList;\n","import React, { useState, useEffect } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport { getPokemon } from \"../utils/pokemon\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst ModalCard = ({ id, open, handleClose }) => {\n  let [pokemon, setPokemon] = useState(null);\n  let [error, setError] = useState(false);\n\n  useEffect(() => {\n    getPokemon(id, setPokemon, setError);\n  }, [id]);\n\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        {!error ? (\n          <pre>{JSON.stringify(pokemon, null, 2)}</pre>\n        ) : (\n          <div>No available</div>\n        )}\n      </Box>\n    </Modal>\n  );\n};\n\nexport default ModalCard;\n","export default __webpack_public_path__ + \"static/media/bg.6804a20b.jpg\";","import React, { useState, useEffect } from \"react\";\nimport Pagination from \"@mui/material/Pagination\";\nimport { pokemonPager } from \"../utils/pokemon\";\nimport NameLink from \"../components/NameLink\";\nimport PokemonList from \"../components/PokemonList\";\nimport ModalCard from \"../components/ModalCard\";\nimport { makeStyles } from \"@mui/styles\";\n\nimport backgroundImage from \"../assets/bg.jpg\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundImage: `url(${backgroundImage})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"100% 100%\",\n    minHeight: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n  },\n  list: {\n    marginTop: 100,\n  },\n}));\n\nconst Pokemons = () => {\n  const [page, setPage] = useState(1);\n  const [maxPage, setMaxPage] = useState(0);\n  const [pokemons, setPokemons] = useState([]);\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = (name) => {\n    setActivePokemon(name);\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setActivePokemon(\"\");\n    setOpen(false);\n  };\n  // <Button onClick={handleOpen}>Open modal</Button>;\n\n  const [activePokemon, setActivePokemon] = useState(\"\");\n\n  const classes = useStyles();\n\n  const changePage = (event, value) => {\n    setPage(value);\n  };\n\n  useEffect(() => {\n    pokemonPager(25 * (page - 1), 25, setPokemons, setMaxPage);\n  }, [page]);\n\n  return (\n    <div className={classes.root}>\n      {maxPage > 0 ? (\n        <>\n          <PokemonList className={classes.list}>\n            {pokemons.map(({ name }, index) => (\n              <NameLink\n                name={name}\n                key={index}\n                handleOpen={() => handleOpen(name)}\n              />\n            ))}\n          </PokemonList>\n\n          {/* <pre>{JSON.stringify(pokemons, null, 2)}</pre> */}\n          <Pagination\n            className={classes.footer}\n            sx={{\n              p: 2,\n              m: 3,\n              bgcolor: \"white\",\n            }}\n            variant=\"outlined\"\n            count={maxPage}\n            showFirstButton\n            showLastButton\n            page={page}\n            onChange={changePage}\n          />\n        </>\n      ) : (\n        <div>There are no Pokemons</div>\n      )}\n      {activePokemon && (\n        <ModalCard handleClose={handleClose} id={activePokemon} open={open} />\n      )}\n    </div>\n  );\n};\n\nexport default Pokemons;\n","export default __webpack_public_path__ + \"static/media/logo.9631a0e0.png\";","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport { makeStyles } from \"@mui/styles\";\n\nimport logo from \"../assets/logo.png\";\n\nconst useStyles = makeStyles({\n  logo: {\n    maxWidth: 160,\n    margin: \"auto\",\n  },\n});\n\nexport default function Nav() {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"fixed\" style={{ backgroundColor: \"black\" }} sx={{ p: 2 }}>\n      <Toolbar>\n        <img src={logo} className={classes.logo} alt=\"logo\" />\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport HomePage from \"./Pages\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <div>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\" render={(props) => <HomePage {...props} />} />\n        <Route render={() => <Redirect to=\"/\" />} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}